package com.hywa.bigdata.storage.service.impl;

import com.hywa.bigdata.storage.common.AjaxJson;
import com.hywa.bigdata.storage.common.IDUtils;
import com.hywa.bigdata.storage.common.ListKit;
import com.hywa.bigdata.storage.entity.*;
import com.hywa.bigdata.storage.mapper.HomepageHandleDesigningMapper;
import com.hywa.bigdata.storage.mapper.OrderFieldDesigningMapper;
import com.hywa.bigdata.storage.mapper.OrderHandleDesigningMapper;
import com.hywa.bigdata.storage.service.TemplOrderFieldDesigningService;
import com.hywa.bigdata.storage.service.TemplOrderHandleDesigningService;
import com.hywa.bigdata.storage.service.WindowsInfoService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.StringUtils;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Service
public class WindowsServiceImpl implements WindowsInfoService {

    @Autowired
    HomepageHandleDesigningMapper homepageHandleDesigningMapper;

    @Autowired
    OrderHandleDesigningMapper orderHandleDesigningMapper;

    @Autowired
    OrderFieldDesigningMapper orderFieldDesigningMapper;
    
    @Autowired
    TemplOrderFieldDesigningService templOrderFieldDesigningService;

    @Autowired
    TemplOrderHandleDesigningService templOrderHandleDesigningService;
    @Override
    @Transactional
    public AjaxJson designHomePage(DesignHomePageInfo designHomePageInfo, User user) {
        Date date = new Date();
        List<HomepageHandleDesigning> homepageHandleDesignings = designHomePageInfo.getData();
        int save=0;
        int update=0;
        HomepageHandleDesigningExample homepageHandleDesigningExample=new HomepageHandleDesigningExample();
        HomepageHandleDesigningExample.Criteria criteria=homepageHandleDesigningExample.createCriteria();
        criteria.andTaskIdEqualTo(homepageHandleDesignings.get(0).getTaskId());
        List<HomepageHandleDesigning> list =homepageHandleDesigningMapper.selectByExample(homepageHandleDesigningExample);
        for (HomepageHandleDesigning homepageHandleDesigning : homepageHandleDesignings) {
        	criteria.andTaskIdEqualTo(homepageHandleDesigning.getTaskId());
            if (ListKit.isEmpty(list)) {
                homepageHandleDesigning.setId(IDUtils.getUUID());
                homepageHandleDesigning.setCreateTime(date);
                homepageHandleDesigning.setCreateUser(user.getId());
                int insert = homepageHandleDesigningMapper.insert(homepageHandleDesigning);
                save += insert;
            } else {
                homepageHandleDesigning.setUpdateTime(date);
                homepageHandleDesigning.setUpdateUser(user.getId());
                int i = homepageHandleDesigningMapper.updateByPrimaryKeySelective(homepageHandleDesigning);
                update+=i;
            }
        }
        //homepageHandleDesigningMapper.insertBatch(homepageHandleDesignings);
        return homepageHandleDesignings.size()==(save+update)?new AjaxJson(0, AjaxJson.MSGSUCCESS):new AjaxJson(1,AjaxJson.MSGFAILURE);
}

    @Override
    public List<HomepageHandleDesigning> designHomePageFindByTaskId(String taskId) {
        HomepageHandleDesigningExample homepageHandleDesigningExample = new HomepageHandleDesigningExample();
        HomepageHandleDesigningExample.Criteria criteria = homepageHandleDesigningExample.createCriteria();
        criteria.andTaskIdEqualTo(taskId);
        return homepageHandleDesigningMapper.selectByExample(homepageHandleDesigningExample);
    }

    @Override
    public Map<String, Object> designOrderFindByTaskId(String taskId) {
        Map<String, Object> map=new HashMap<>();
        OrderFieldDesigningExample orderFieldDesigningExample = new OrderFieldDesigningExample();
        OrderFieldDesigningExample.Criteria criteria = orderFieldDesigningExample.createCriteria();
        criteria.andTaskIdEqualTo(taskId);
        List<OrderFieldDesigning> orderFieldDesignings = orderFieldDesigningMapper.selectByExample(orderFieldDesigningExample);
        Object o1=!ListKit.isEmpty(orderFieldDesignings)?orderFieldDesignings:templOrderFieldDesigningService.findAll(taskId);
        map.put("orderFieldDesignings",o1);
        OrderHandleDesigningExample orderHandleDesigningExample = new OrderHandleDesigningExample();
        OrderHandleDesigningExample.Criteria criteria1 = orderHandleDesigningExample.createCriteria();
        criteria1.andTaskIdEqualTo(taskId);
        List<OrderHandleDesigning> orderHandleDesignings = orderHandleDesigningMapper.selectByExample(orderHandleDesigningExample);
        Object o2=!ListKit.isEmpty(orderHandleDesignings)?orderHandleDesignings:templOrderHandleDesigningService.findAll(taskId);
        map.put("orderHandleDesignings",o2);
        return map;
    }

    @Override
    @Transactional
    public AjaxJson designOrder(OrderDesigningInfo orderDesigningInfo, User user) {
        Date date = new Date();
        List<OrderFieldDesigning> orderFieldDesignings = orderDesigningInfo.getOrderFieldDesignings();
        OrderFieldDesigningExample orderFieldDesigningExample = new OrderFieldDesigningExample();
        OrderFieldDesigningExample.Criteria criteria = orderFieldDesigningExample.createCriteria();
        criteria.andTaskIdEqualTo(orderFieldDesignings.get(0).getTaskId());
        List<OrderFieldDesigning> olist=orderFieldDesigningMapper.selectByExample(orderFieldDesigningExample);
        int save=0;
        int update=0;
        for (OrderFieldDesigning orderFieldDesigning : orderFieldDesignings) {
            if (ListKit.isEmpty(olist)) {
                orderFieldDesigning.setId(IDUtils.getUUID());
                orderFieldDesigning.setCreateTime(date);
                orderFieldDesigning.setCreateUser(user.getId());
                int insert = orderFieldDesigningMapper.insert(orderFieldDesigning);
                save+=insert;
            } else {
                orderFieldDesigning.setUpdateTime(date);
                orderFieldDesigning.setUpdateUser(user.getId());
                int i = orderFieldDesigningMapper.updateByPrimaryKeySelective(orderFieldDesigning);
                update+=i;  
            }
        }
        //orderFieldDesigningMapper.insertBatch(orderFieldDesignings);
        List<OrderHandleDesigning> orderHandleDesignings = orderDesigningInfo.getOrderHandleDesignings();
        OrderHandleDesigningExample orderHandleDesigningExample = new OrderHandleDesigningExample();
        OrderHandleDesigningExample.Criteria criteria1 = orderHandleDesigningExample.createCriteria();
        criteria1.andTaskIdEqualTo(orderHandleDesignings.get(0).getTaskId());
        List<OrderHandleDesigning> orlist=orderHandleDesigningMapper.selectByExample(orderHandleDesigningExample);
        for (OrderHandleDesigning  orderHandleDesigning: orderHandleDesignings) {
            if (ListKit.isEmpty(orlist)) {
                orderHandleDesigning.setId(IDUtils.getUUID());
                orderHandleDesigning.setCreateUser(user.getId());
                orderHandleDesigning.setCreateTime(date);
                int insert = orderHandleDesigningMapper.insert(orderHandleDesigning);
                save+=insert;
            } else {
                orderHandleDesigning.setUpdateUser(user.getId());
                orderHandleDesigning.setUpdateTime(date);
                int i = orderHandleDesigningMapper.updateByPrimaryKeySelective(orderHandleDesigning);
                update+=i;
            }
            orderHandleDesigningExample.clear();
        }
        //orderHandleDesigningMapper.insertBatch(orderHandleDesignings);
        return (orderFieldDesignings.size()+orderHandleDesignings.size())==(save+update)?new AjaxJson(0, AjaxJson.MSGSUCCESS):new AjaxJson(1,AjaxJson.MSGFAILURE);
}
}
