<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hywa.bigdata.storage.mapper.OrderdetailMapper">
	<resultMap id="BaseResultMap" type="com.hywa.bigdata.storage.entity.Orderdetail">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="processId" property="processId" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="operator" property="operator" jdbcType="VARCHAR" />
		<result column="operatorPhone" property="operatorPhone"
			jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="consignee" property="consignee" jdbcType="VARCHAR" />
		<result column="consigneePhone" property="consigneePhone"
			jdbcType="VARCHAR" />
		<result column="client" property="client" jdbcType="VARCHAR" />
		<result column="department" property="department" jdbcType="VARCHAR" />
		<result column="trackingNumber" property="trackingNumber"
			jdbcType="VARCHAR" />
		<result column="deliveryTime" property="deliveryTime" jdbcType="TIMESTAMP" />
		<result column="driver" property="driver" jdbcType="VARCHAR" />
		<result column="driverPhone" property="driverPhone" jdbcType="VARCHAR" />
		<result column="shippingAddress" property="shippingAddress"
			jdbcType="VARCHAR" />
		<result column="outputCode" property="outputCode" jdbcType="VARCHAR" />
		<result column="currentStep" property="currentStep" jdbcType="VARCHAR" />
		<result column="taskId" property="taskId" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="createUser" property="createUser" jdbcType="VARCHAR" />
		<result column="delUser" property="delUser" jdbcType="VARCHAR" />
		<result column="updateUser" property="updateUser" jdbcType="VARCHAR" />
		<result column="submitType" property="submitType" jdbcType="BIT" />
		<result column="opinion" property="opinion" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="taskKey" property="taskKey" jdbcType="VARCHAR" />
		<result column="auditType" property="auditType" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="clientName" property="clientName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, processId, state, title, operator, operatorPhone, code,
		consignee,
		consigneePhone,
		client, department, trackingNumber,
		deliveryTime, driver, driverPhone,
		shippingAddress,
		outputCode,
		currentStep, taskId, createTime, updateTime, createUser, delUser,
		updateUser,
		submitType, opinion, description, taskKey, auditType,
		status, clientName
	</sql>
	<sql id="Column_List">
		id, operator, operatorPhone, title, code, consignee,
		consigneePhone,
		client, department,
		trackingNumber, deliveryTime,
		driver, driverPhone, shippingAddress, outputCode,
		processId,
		currentStep, taskId, state,submitType, opinion, description, taskKey,
		auditType,status,clientName
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.hywa.bigdata.storage.entity.OrderdetailExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Column_List" />
		from orderdetail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from orderdetail
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		orderdetail
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.hywa.bigdata.storage.entity.OrderdetailExample">
		delete from orderdetail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hywa.bigdata.storage.entity.Orderdetail">
		insert into orderdetail (id,
		processId, state,
		title, operator, operatorPhone,
		code, consignee,
		consigneePhone,
		client, department, trackingNumber,
		deliveryTime,
		driver, driverPhone,
		shippingAddress, outputCode, currentStep,
		taskId,
		createTime, updateTime,
		createUser, delUser, updateUser,
		submitType,
		opinion, description,
		taskKey, auditType, status,
		clientName)
		values
		(#{id,jdbcType=VARCHAR}, #{processId,jdbcType=VARCHAR},
		#{state,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR},
		#{operator,jdbcType=VARCHAR}, #{operatorPhone,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR},
		#{consigneePhone,jdbcType=VARCHAR},
		#{client,jdbcType=VARCHAR},
		#{department,jdbcType=VARCHAR}, #{trackingNumber,jdbcType=VARCHAR},
		#{deliveryTime,jdbcType=TIMESTAMP}, #{driver,jdbcType=VARCHAR},
		#{driverPhone,jdbcType=VARCHAR},
		#{shippingAddress,jdbcType=VARCHAR},
		#{outputCode,jdbcType=VARCHAR}, #{currentStep,jdbcType=VARCHAR},
		#{taskId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{createUser,jdbcType=VARCHAR},
		#{delUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR},
		#{submitType,jdbcType=BIT}, #{opinion,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{taskKey,jdbcType=VARCHAR},
		#{auditType,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
		#{clientName,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.hywa.bigdata.storage.entity.Orderdetail">
		insert into orderdetail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="processId != null">
				processId,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="operator != null">
				operator,
			</if>
			<if test="operatorPhone != null">
				operatorPhone,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="consignee != null">
				consignee,
			</if>
			<if test="consigneePhone != null">
				consigneePhone,
			</if>
			<if test="client != null">
				client,
			</if>
			<if test="department != null">
				department,
			</if>
			<if test="trackingNumber != null">
				trackingNumber,
			</if>
			<if test="deliveryTime != null">
				deliveryTime,
			</if>
			<if test="driver != null">
				driver,
			</if>
			<if test="driverPhone != null">
				driverPhone,
			</if>
			<if test="shippingAddress != null">
				shippingAddress,
			</if>
			<if test="outputCode != null">
				outputCode,
			</if>
			<if test="currentStep != null">
				currentStep,
			</if>
			<if test="taskId != null">
				taskId,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="updateTime != null">
				updateTime,
			</if>
			<if test="createUser != null">
				createUser,
			</if>
			<if test="delUser != null">
				delUser,
			</if>
			<if test="updateUser != null">
				updateUser,
			</if>
			<if test="submitType != null">
				submitType,
			</if>
			<if test="opinion != null">
				opinion,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="taskKey != null">
				taskKey,
			</if>
			<if test="auditType != null">
				auditType,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="clientName != null">
				clientName,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="processId != null">
				#{processId,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="operator != null">
				#{operator,jdbcType=VARCHAR},
			</if>
			<if test="operatorPhone != null">
				#{operatorPhone,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="consignee != null">
				#{consignee,jdbcType=VARCHAR},
			</if>
			<if test="consigneePhone != null">
				#{consigneePhone,jdbcType=VARCHAR},
			</if>
			<if test="client != null">
				#{client,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				#{department,jdbcType=VARCHAR},
			</if>
			<if test="trackingNumber != null">
				#{trackingNumber,jdbcType=VARCHAR},
			</if>
			<if test="deliveryTime != null">
				#{deliveryTime,jdbcType=TIMESTAMP},
			</if>
			<if test="driver != null">
				#{driver,jdbcType=VARCHAR},
			</if>
			<if test="driverPhone != null">
				#{driverPhone,jdbcType=VARCHAR},
			</if>
			<if test="shippingAddress != null">
				#{shippingAddress,jdbcType=VARCHAR},
			</if>
			<if test="outputCode != null">
				#{outputCode,jdbcType=VARCHAR},
			</if>
			<if test="currentStep != null">
				#{currentStep,jdbcType=VARCHAR},
			</if>
			<if test="taskId != null">
				#{taskId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="delUser != null">
				#{delUser,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="submitType != null">
				#{submitType,jdbcType=BIT},
			</if>
			<if test="opinion != null">
				#{opinion,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="taskKey != null">
				#{taskKey,jdbcType=VARCHAR},
			</if>
			<if test="auditType != null">
				#{auditType,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="clientName != null">
				#{clientName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hywa.bigdata.storage.entity.OrderdetailExample"
		resultType="java.lang.Integer">
		select count(*) from orderdetail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update orderdetail
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.processId != null">
				processId = #{record.processId,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.operator != null">
				operator = #{record.operator,jdbcType=VARCHAR},
			</if>
			<if test="record.operatorPhone != null">
				operatorPhone = #{record.operatorPhone,jdbcType=VARCHAR},
			</if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.consignee != null">
				consignee = #{record.consignee,jdbcType=VARCHAR},
			</if>
			<if test="record.consigneePhone != null">
				consigneePhone =
				#{record.consigneePhone,jdbcType=VARCHAR},
			</if>
			<if test="record.client != null">
				client = #{record.client,jdbcType=VARCHAR},
			</if>
			<if test="record.department != null">
				department = #{record.department,jdbcType=VARCHAR},
			</if>
			<if test="record.trackingNumber != null">
				trackingNumber =
				#{record.trackingNumber,jdbcType=VARCHAR},
			</if>
			<if test="record.deliveryTime != null">
				deliveryTime = #{record.deliveryTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.driver != null">
				driver = #{record.driver,jdbcType=VARCHAR},
			</if>
			<if test="record.driverPhone != null">
				driverPhone = #{record.driverPhone,jdbcType=VARCHAR},
			</if>
			<if test="record.shippingAddress != null">
				shippingAddress =
				#{record.shippingAddress,jdbcType=VARCHAR},
			</if>
			<if test="record.outputCode != null">
				outputCode = #{record.outputCode,jdbcType=VARCHAR},
			</if>
			<if test="record.currentStep != null">
				currentStep = #{record.currentStep,jdbcType=VARCHAR},
			</if>
			<if test="record.taskId != null">
				taskId = #{record.taskId,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				createTime = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.createUser != null">
				createUser = #{record.createUser,jdbcType=VARCHAR},
			</if>
			<if test="record.delUser != null">
				delUser = #{record.delUser,jdbcType=VARCHAR},
			</if>
			<if test="record.updateUser != null">
				updateUser = #{record.updateUser,jdbcType=VARCHAR},
			</if>
			<if test="record.submitType != null">
				submitType = #{record.submitType,jdbcType=BIT},
			</if>
			<if test="record.opinion != null">
				opinion = #{record.opinion,jdbcType=VARCHAR},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.taskKey != null">
				taskKey = #{record.taskKey,jdbcType=VARCHAR},
			</if>
			<if test="record.auditType != null">
				auditType = #{record.auditType,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.clientName != null">
				clientName = #{record.clientName,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update orderdetail
		set id = #{record.id,jdbcType=VARCHAR},
		processId =
		#{record.processId,jdbcType=VARCHAR},
		state =
		#{record.state,jdbcType=INTEGER},
		title =
		#{record.title,jdbcType=VARCHAR},
		operator =
		#{record.operator,jdbcType=VARCHAR},
		operatorPhone =
		#{record.operatorPhone,jdbcType=VARCHAR},
		code =
		#{record.code,jdbcType=VARCHAR},
		consignee =
		#{record.consignee,jdbcType=VARCHAR},
		consigneePhone =
		#{record.consigneePhone,jdbcType=VARCHAR},
		client =
		#{record.client,jdbcType=VARCHAR},
		department =
		#{record.department,jdbcType=VARCHAR},
		trackingNumber =
		#{record.trackingNumber,jdbcType=VARCHAR},
		deliveryTime =
		#{record.deliveryTime,jdbcType=TIMESTAMP},
		driver =
		#{record.driver,jdbcType=VARCHAR},
		driverPhone =
		#{record.driverPhone,jdbcType=VARCHAR},
		shippingAddress =
		#{record.shippingAddress,jdbcType=VARCHAR},
		outputCode =
		#{record.outputCode,jdbcType=VARCHAR},
		currentStep =
		#{record.currentStep,jdbcType=VARCHAR},
		taskId =
		#{record.taskId,jdbcType=VARCHAR},
		createTime =
		#{record.createTime,jdbcType=TIMESTAMP},
		updateTime =
		#{record.updateTime,jdbcType=TIMESTAMP},
		createUser =
		#{record.createUser,jdbcType=VARCHAR},
		delUser =
		#{record.delUser,jdbcType=VARCHAR},
		updateUser =
		#{record.updateUser,jdbcType=VARCHAR},
		submitType =
		#{record.submitType,jdbcType=BIT},
		opinion =
		#{record.opinion,jdbcType=VARCHAR},
		description =
		#{record.description,jdbcType=VARCHAR},
		taskKey =
		#{record.taskKey,jdbcType=VARCHAR},
		auditType =
		#{record.auditType,jdbcType=VARCHAR},
		status =
		#{record.status,jdbcType=INTEGER},
		clientName =
		#{record.clientName,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hywa.bigdata.storage.entity.Orderdetail">
		update orderdetail
		<set>
			<if test="processId != null">
				processId = #{processId,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="operator != null">
				operator = #{operator,jdbcType=VARCHAR},
			</if>
			<if test="operatorPhone != null">
				operatorPhone = #{operatorPhone,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="consignee != null">
				consignee = #{consignee,jdbcType=VARCHAR},
			</if>
			<if test="consigneePhone != null">
				consigneePhone = #{consigneePhone,jdbcType=VARCHAR},
			</if>
			<if test="client != null">
				client = #{client,jdbcType=VARCHAR},
			</if>
			<if test="department != null">
				department = #{department,jdbcType=VARCHAR},
			</if>
			<if test="trackingNumber != null">
				trackingNumber = #{trackingNumber,jdbcType=VARCHAR},
			</if>
			<if test="deliveryTime != null">
				deliveryTime = #{deliveryTime,jdbcType=TIMESTAMP},
			</if>
			<if test="driver != null">
				driver = #{driver,jdbcType=VARCHAR},
			</if>
			<if test="driverPhone != null">
				driverPhone = #{driverPhone,jdbcType=VARCHAR},
			</if>
			<if test="shippingAddress != null">
				shippingAddress = #{shippingAddress,jdbcType=VARCHAR},
			</if>
			<if test="outputCode != null">
				outputCode = #{outputCode,jdbcType=VARCHAR},
			</if>
			<if test="currentStep != null">
				currentStep = #{currentStep,jdbcType=VARCHAR},
			</if>
			<if test="taskId != null">
				taskId = #{taskId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				updateTime = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				createUser = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="delUser != null">
				delUser = #{delUser,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				updateUser = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="submitType != null">
				submitType = #{submitType,jdbcType=BIT},
			</if>
			<!-- <if test="opinion != null" > -->
			opinion = #{opinion,jdbcType=VARCHAR},
			<!-- </if> -->
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="taskKey != null">
				taskKey = #{taskKey,jdbcType=VARCHAR},
			</if>
			<if test="auditType != null">
				auditType = #{auditType,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="clientName != null">
				clientName = #{clientName,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hywa.bigdata.storage.entity.Orderdetail">
		update orderdetail
		set processId = #{processId,jdbcType=VARCHAR},
		state =
		#{state,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		operator =
		#{operator,jdbcType=VARCHAR},
		operatorPhone =
		#{operatorPhone,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		consignee = #{consignee,jdbcType=VARCHAR},
		consigneePhone =
		#{consigneePhone,jdbcType=VARCHAR},
		client =
		#{client,jdbcType=VARCHAR},
		department =
		#{department,jdbcType=VARCHAR},
		trackingNumber =
		#{trackingNumber,jdbcType=VARCHAR},
		deliveryTime =
		#{deliveryTime,jdbcType=TIMESTAMP},
		driver =
		#{driver,jdbcType=VARCHAR},
		driverPhone =
		#{driverPhone,jdbcType=VARCHAR},
		shippingAddress =
		#{shippingAddress,jdbcType=VARCHAR},
		outputCode =
		#{outputCode,jdbcType=VARCHAR},
		currentStep =
		#{currentStep,jdbcType=VARCHAR},
		taskId = #{taskId,jdbcType=VARCHAR},
		createTime = #{createTime,jdbcType=TIMESTAMP},
		updateTime =
		#{updateTime,jdbcType=TIMESTAMP},
		createUser =
		#{createUser,jdbcType=VARCHAR},
		delUser = #{delUser,jdbcType=VARCHAR},
		updateUser = #{updateUser,jdbcType=VARCHAR},
		submitType =
		#{submitType,jdbcType=BIT},
		opinion = #{opinion,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		taskKey =
		#{taskKey,jdbcType=VARCHAR},
		auditType = #{auditType,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		clientName =
		#{clientName,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>


	<select id="findUnfinished" resultType="java.util.Map">
		SELECT
		auditType,
		count(o.id) num
		FROM
		hi_task_node_info h
		JOIN orderdetail o ON o.taskId = h.id
		WHERE
		state IN (0, 1)
		AND (
		h.assignee LIKE CONCAT('%', #{userId}, '%')
		OR h.department LIKE CONCAT('%', #{department}, '%')
		)
		GROUP BY
		auditType
		<!-- SELECT auditType,count(*) num FROM hi_task_node_info h JOIN orderdetail 
			o ON o.taskId=h.id JOIN sys_user s ON h.department=s.REF_SYS_DEPARTMENT WHERE 
			state IN (0,1) AND (h.assignee like CONCAT('%',#{user},'%') or s.GUID like 
			CONCAT('%',#{user},'%') ) GROUP BY auditType -->
		<!-- SELECT auditType,count(*) num FROM orderdetail WHERE state IN (0,1) 
			AND createUser=#{user} GROUP BY auditType -->
	</select>

	<select id="findToBeCompletedCount" resultType="java.lang.Integer">
		select count(*)
		from
		hi_task_node_info t join orderdetail o
		ON
		o.taskId=t.id
		WHERE o.state IN(0,1)
		-- GROUP BY
		AND t.menuPosition in
		(
		<foreach item="item" collection="list" separator=",">
			#{item}
		</foreach>
		)
	</select>

	<select id="findByCurrentStep" resultType="java.lang.String">
		SELECT DISTINCT
		currentStep FROM orderdetail
	</select>

	<select id="findOperatorAll" resultType="com.hywa.bigdata.storage.entity.SysUser">
		SELECT DISTINCT
		u.guid,u.phone,u.real_name
		FROM sys_user u JOIN orderdetail o
		ON
		u.GUID=o.operator
		where o.processId=#{processId}
	</select>

	<select id="findMaxCode" resultType="java.lang.String">
		select max(code) from
		orderdetail
	</select>

	<select id="findRollBackOrderdetail" resultType="java.lang.Integer">
		SELECT COUNT(*)FROM
		orderdetail
		WHERE
		state is NULL
		and opinion is NOT
		NULL
		and (processId=#{one}
		<if test="two != null and two!='' ">
			OR processId=#{two}
		</if>
		)
	</select>

	<select id="findCurrentStep" resultType="java.lang.String">
		SELECT DISTINCT name
		FROM( SELECT DISTINCT name FROM
		ru_task_node_info
		WHERE
		processId=#{processId}
		UNION
		SELECT DISTINCT h.name as name FROM
		orderdetail o JOIN hi_task_node_info h
		ON
		o.taskId=h.id
		WHERE
		o.processId=#{processId}
		and
		o.state!=4
		)a
	</select>


	<select id="findUnfinishedByProcessId" resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		hi_task_node_info h
		JOIN orderdetail o ON o.taskId = h.id
		WHERE
		o.state IN (0, 1)
		AND
		h.menuPosition=#{menuPosition}
		AND
		o.processId=#{processId}
		AND
		(
		h.assignee LIKE CONCAT('%',#{userId}, '%')
		OR h.department LIKE CONCAT('%', #{department}, '%')
		)
	</select>
</mapper>