<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hywa.bigdata.storage.mapper.HiOrderFieldDesigningMapper" >
  <resultMap id="BaseResultMap" type="com.hywa.bigdata.storage.entity.HiOrderFieldDesigning" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="field" property="field" jdbcType="VARCHAR" />
    <result column="isRequired" property="isRequired" jdbcType="INTEGER" />
    <result column="permission" property="permission" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="createUser" property="createUser" jdbcType="VARCHAR" />
    <result column="taskId" property="taskId" jdbcType="VARCHAR" />
    <result column="realProcess" property="realProcess" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, field, isRequired, permission, createTime, createUser, taskId, realProcess
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hywa.bigdata.storage.entity.HiOrderFieldDesigningExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hi_order_field_designing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from hi_order_field_designing
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from hi_order_field_designing
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hywa.bigdata.storage.entity.HiOrderFieldDesigningExample" >
    delete from hi_order_field_designing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hywa.bigdata.storage.entity.HiOrderFieldDesigning" >
    insert into hi_order_field_designing (id, name, field, 
      isRequired, permission, createTime, 
      createUser, taskId, realProcess
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{field,jdbcType=VARCHAR}, 
      #{isRequired,jdbcType=INTEGER}, #{permission,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{realProcess,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hywa.bigdata.storage.entity.HiOrderFieldDesigning" >
    insert into hi_order_field_designing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="field != null" >
        field,
      </if>
      <if test="isRequired != null" >
        isRequired,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="createUser != null" >
        createUser,
      </if>
      <if test="taskId != null" >
        taskId,
      </if>
      <if test="realProcess != null" >
        realProcess,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="field != null" >
        #{field,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null" >
        #{isRequired,jdbcType=INTEGER},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="realProcess != null" >
        #{realProcess,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hywa.bigdata.storage.entity.HiOrderFieldDesigningExample" resultType="java.lang.Integer" >
    select count(*) from hi_order_field_designing
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hi_order_field_designing
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.field != null" >
        field = #{record.field,jdbcType=VARCHAR},
      </if>
      <if test="record.isRequired != null" >
        isRequired = #{record.isRequired,jdbcType=INTEGER},
      </if>
      <if test="record.permission != null" >
        permission = #{record.permission,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        createUser = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null" >
        taskId = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.realProcess != null" >
        realProcess = #{record.realProcess,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hi_order_field_designing
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      field = #{record.field,jdbcType=VARCHAR},
      isRequired = #{record.isRequired,jdbcType=INTEGER},
      permission = #{record.permission,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createUser = #{record.createUser,jdbcType=VARCHAR},
      taskId = #{record.taskId,jdbcType=VARCHAR},
      realProcess = #{record.realProcess,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hywa.bigdata.storage.entity.HiOrderFieldDesigning" >
    update hi_order_field_designing
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="field != null" >
        field = #{field,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null" >
        isRequired = #{isRequired,jdbcType=INTEGER},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        taskId = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="realProcess != null" >
        realProcess = #{realProcess,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hywa.bigdata.storage.entity.HiOrderFieldDesigning" >
    update hi_order_field_designing
    set name = #{name,jdbcType=VARCHAR},
      field = #{field,jdbcType=VARCHAR},
      isRequired = #{isRequired,jdbcType=INTEGER},
      permission = #{permission,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      taskId = #{taskId,jdbcType=VARCHAR},
      realProcess = #{realProcess,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--自定义批量插入-->
  <insert id="insertBatch" parameterType="java.util.List">
    insert into hi_order_field_designing (id, name, field,
    isRequired, permission, createTime,
    createUser, taskId, realProcess
    )
    values
    <foreach collection="list" item="hiOrderFieldDesignings" separator=",">
      (#{hiOrderFieldDesignings.id,jdbcType=VARCHAR},
      #{hiOrderFieldDesignings.name,jdbcType=VARCHAR},
      #{hiOrderFieldDesignings.field,jdbcType=VARCHAR},
      #{hiOrderFieldDesignings.isRequired,jdbcType=INTEGER},
      #{hiOrderFieldDesignings.permission,jdbcType=INTEGER},
      #{hiOrderFieldDesignings.createTime,jdbcType=TIMESTAMP},
      #{hiOrderFieldDesignings.createUser,jdbcType=VARCHAR},
      #{hiOrderFieldDesignings.taskId,jdbcType=VARCHAR},
      #{hiOrderFieldDesignings.realProcess,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
</mapper>