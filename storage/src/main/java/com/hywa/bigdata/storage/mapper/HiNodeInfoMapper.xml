<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hywa.bigdata.storage.mapper.HiNodeInfoMapper" >
  <resultMap id="BaseResultMap" type="com.hywa.bigdata.storage.entity.HiNodeInfo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="isShow" property="isShow" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="createUser" property="createUser" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="updateUser" property="updateUser" jdbcType="VARCHAR" />
    <result column="realProcess" property="realProcess" jdbcType="VARCHAR" />
    <result column="oldTaskId" property="oldTaskId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, isShow, sort, createTime, createUser, updateTime, updateUser, realProcess, 
    oldTaskId
  </sql>
  <sql id="Column_List" >
    name, sort
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hywa.bigdata.storage.entity.HiNodeInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Column_List" />
    from hi_node_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from hi_node_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from hi_node_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hywa.bigdata.storage.entity.HiNodeInfoExample" >
    delete from hi_node_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hywa.bigdata.storage.entity.HiNodeInfo" >
    insert into hi_node_info (id, name, isShow, 
      sort, createTime, createUser, 
      updateTime, updateUser, realProcess, 
      oldTaskId)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{isShow,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{realProcess,jdbcType=VARCHAR}, 
      #{oldTaskId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hywa.bigdata.storage.entity.HiNodeInfo" >
    insert into hi_node_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="isShow != null" >
        isShow,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="createUser != null" >
        createUser,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="updateUser != null" >
        updateUser,
      </if>
      <if test="realProcess != null" >
        realProcess,
      </if>
      <if test="oldTaskId != null" >
        oldTaskId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isShow != null" >
        #{isShow,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="realProcess != null" >
        #{realProcess,jdbcType=VARCHAR},
      </if>
      <if test="oldTaskId != null" >
        #{oldTaskId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hywa.bigdata.storage.entity.HiNodeInfoExample" resultType="java.lang.Integer" >
    select count(*) from hi_node_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hi_node_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.isShow != null" >
        isShow = #{record.isShow,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        createUser = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        updateUser = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.realProcess != null" >
        realProcess = #{record.realProcess,jdbcType=VARCHAR},
      </if>
      <if test="record.oldTaskId != null" >
        oldTaskId = #{record.oldTaskId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hi_node_info
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      isShow = #{record.isShow,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createUser = #{record.createUser,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateUser,jdbcType=VARCHAR},
      realProcess = #{record.realProcess,jdbcType=VARCHAR},
      oldTaskId = #{record.oldTaskId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hywa.bigdata.storage.entity.HiNodeInfo" >
    update hi_node_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isShow != null" >
        isShow = #{isShow,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="realProcess != null" >
        realProcess = #{realProcess,jdbcType=VARCHAR},
      </if>
      <if test="oldTaskId != null" >
        oldTaskId = #{oldTaskId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hywa.bigdata.storage.entity.HiNodeInfo" >
    update hi_node_info
    set name = #{name,jdbcType=VARCHAR},
      isShow = #{isShow,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=VARCHAR},
      realProcess = #{realProcess,jdbcType=VARCHAR},
      oldTaskId = #{oldTaskId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--自定义批量插入-->
  <insert id="insertBatch" parameterType="java.util.List">
    insert into hi_node_info (id, name, createTime,
    isShow, sort, updateTime,
    createUser, updateUser,realProcess)
    values
    <foreach collection="list" item="hiNodeInfo" separator=",">
      (#{hiNodeInfo.id,jdbcType=VARCHAR},
      #{hiNodeInfo.name,jdbcType=VARCHAR},
      #{hiNodeInfo.createTime,jdbcType=TIMESTAMP},
      #{hiNodeInfo.isShow,jdbcType=VARCHAR},
      #{hiNodeInfo.sort,jdbcType=INTEGER},
      #{hiNodeInfo.updateTime,jdbcType=TIMESTAMP},
      #{hiNodeInfo.createUser,jdbcType=VARCHAR},
      #{hiNodeInfo.updateUser,jdbcType=VARCHAR},
      #{hiNodeInfo.realProcess,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>